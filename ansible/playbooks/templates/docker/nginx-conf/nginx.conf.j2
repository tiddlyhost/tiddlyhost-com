#-----------------------------------------------------------------------
# Most of this is as per the default config. See:
#   docker run --rm -it nginx /bin/bash -c 'cat /etc/nginx/nginx.conf'
#-----------------------------------------------------------------------

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '"$request_method $scheme://$host$request_uri $server_protocol" '
                      '$status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"'
                      #' rt=$request_time uct=$upstream_connect_time uht=$upstream_header_time urt=$upstream_response_time'
                      ;

    access_log /var/log/nginx/access.log main buffer=32k flush=30s;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # Default is 60s which can be exceeded sometimes, either for a very large
    # TiddlyWiki, or the server is slow for some other reason. Bump it up to
    # reduce the likelihood 504 gateway timeout page.
    proxy_read_timeout 180s;

    #gzip  on;

    #-------------------------------------------------
    # From here down is the Tiddlyhost specific config
    #-------------------------------------------------

    # SSL certs
    ssl_certificate /etc/letsencrypt/live/{{ primary_host }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ primary_host }}/privkey.pem;

    server {
        # Redirect most http requests to https
        listen 80;
        server_name {{ primary_host }} {% if tiddlyspot_host is defined and tiddlyspot_host %}{{ tiddlyspot_host }} {% endif %}*.{{ primary_host }};
        return 301 https://$host$request_uri;
    }

    {% if tiddlyspot_host is defined and tiddlyspot_host -%}
    server {
        # Tiddlyspot splash page
        listen 443 ssl;
        server_name {{ tiddlyspot_host }};
        include server-common.conf;
    }

    server {
        # Individual Tiddlyspot sites
        # These accept both http and https for legacy reasons
        # (Site names with dots in them can't use the SSL cert)
        listen 80;
        listen 443 ssl;
        server_name *.{{ tiddlyspot_host }};
        include server-common.conf;
    }

    {% endif -%}

    server {
        # Main Tiddlyhost web UI
        listen 443 ssl;
        server_name {{ primary_host }};
        include server-common.conf;
    }

    server {
        # Individual Tiddlyhost sites
        listen 443 ssl;
        server_name *.{{ primary_host }};
        include server-common.conf;
    }
}
